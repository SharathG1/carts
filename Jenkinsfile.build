@Library('dynatrace@master') _
@Library('keptn-library@6.0.0')
def keptn = new sh.keptn.Keptn()


pipeline {
  agent {
    label 'master'
  }
  
  
	parameters{
         string(defaultValue: 'dev', description: 'Stage of your Keptn project where tests are triggered in', name: 'stage', trim: false) 
         //string(defaultValue: '', description: 'Keptn Context ID', name: 'shkeptncontext', trim: false) 
         //string(defaultValue: '', description: 'Triggered ID', name: 'triggeredid', trim: false) 
	}
  
  environment {
    APP_NAME = "carts"
    VERSION = readFile('version').trim()
    ARTEFACT_ID = "sockshop/" + "${env.APP_NAME}"
    CLASS = "GOLD"
  }
  stages {
	  
	  stage('Initialize Keptn') {
		  steps{
			  script{
        		keptn.keptnInit project:"sockshop", service:"carts", stage:"${params.stage}"
			  }
		       }
    }	  
   stage('Trigger keptn Delivery Sequence') {
        // Send test.finished Event back
	   steps{
		   script{
        //def keptnContext = keptn.sendFinishedEvent eventType: "deployment", keptnContext: "${params.shkeptncontext}", triggeredId: "${params.triggeredid}", result:"pass", status:"succeeded", message:"jenkins tests succeeded"
        def keptnContext = keptn.sendDeliveryTriggeredEvent project: "sockshop", service: "carts", image:"${env.TAG_DEV}"
	      String keptn_bridge = env.KEPTN_BRIDGE
        echo "Open Keptns Bridge: ${keptn_bridge}/trace/${keptnContext}"
		   }
     }
   }
 }
}
